datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @unique @default(uuid()) @db.Uuid
  password  String
  login     String   @unique
  version   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id        String               @unique @default(uuid()) @db.Uuid
  name      String
  grammy    Boolean
  albums    Album[]
  tracks    Track[]
  favorites ArtistsOnFavorites[]
}

model Album {
  id        String              @unique @default(uuid()) @db.Uuid
  name      String
  year      Int
  artistId  String?             @db.Uuid
  artist    Artist?             @relation(fields: [artistId], references: [id], onDelete: SetNull)
  tracks    Track[]
  favorites AlbumsOnFavorites[]
}

model Track {
  id        String              @unique @default(uuid()) @db.Uuid
  name      String
  duration  Int
  artistId  String?             @db.Uuid
  artist    Artist?             @relation(fields: [artistId], references: [id], onDelete: SetNull)
  albumId   String?             @db.Uuid
  album     Album?              @relation(fields: [albumId], references: [id], onDelete: SetNull)
  favorites TracksOnFavorites[]
}

model TracksOnFavorites {
  track       Track     @relation(fields: [trackId], references: [id], onDelete: Cascade)
  trackId     String    @db.Uuid
  favorites   Favorites @relation(fields: [favoritesId], references: [id], onDelete: Cascade)
  favoritesId String    @db.Uuid

  @@id([trackId, favoritesId])
}

model ArtistsOnFavorites {
  artist      Artist    @relation(fields: [artistId], references: [id], onDelete: Cascade)
  artistId    String    @db.Uuid
  favorites   Favorites @relation(fields: [favoritesId], references: [id], onDelete: Cascade)
  favoritesId String    @db.Uuid

  @@id([artistId, favoritesId])
}

model AlbumsOnFavorites {
  album       Album     @relation(fields: [albumId], references: [id], onDelete: Cascade)
  albumId     String    @db.Uuid
  favorites   Favorites @relation(fields: [favoritesId], references: [id], onDelete: Cascade)
  favoritesId String    @db.Uuid

  @@id([albumId, favoritesId])
}

model Favorites {
  id      String               @unique @default(uuid()) @db.Uuid
  tracks  TracksOnFavorites[]
  artists ArtistsOnFavorites[]
  albums  AlbumsOnFavorites[]
}
